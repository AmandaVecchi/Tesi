##### MULTIVARIATE REGRESSION TREES

install.packages("devtools")
devtools::install_github("cran/mvpart") #Packages are not available on R anymore. Downoadng from GitHub directly
devtools::install_github("cran/MVPARTwrap")
install.packages("labdsv")
install.packages("fBasics")

library(devtools)
library(mvpart)
library(MVPARTwrap)
library(labdsv)
library(fBasics)

setwd("C:/LABTESI/")
getwd()

Foram.sp <- as.data.frame(read.csv("Forams_J.csv", sep=";", row.names=1)) #importing the table using the read.csv function as a data frame
Foram.sp_rq <- sqrt(Foram.sp) #calculating the square root of the values
Foram.env <- as.data.frame(read.csv("Env_J.csv", sep=";", row.names=1)) 

#Check if the matrices are correctly organized (samples in rows and species in columns). See the first six rows
head(Foram.sp_rq)
head(Foram.env)

#CLUSTERING
Foram.mv<-mvpart(data.matrix(Foram.sp_rq)~., Foram.env, xv="pick") #apply mvpart of the first dataset with the second dataset  (find a correlation, dependence)
#xv -> Selection of tree by cross-validation: "1se" - gives best tree within one SE of
#the overall best, "min" - the best tree, "pick" - pick the tree size interactively,
#"none" - no cross-validation
#If argument xv="pick" has been used, which we recommend, one left-clicks
#on the point representing the desired number of groups. A tree is then drawn

resF<-MRT(Foram.mv)

#Extracting the clustering value
clu.MRT.Foram<-resF$obj$where
data.frame(clu.MRT.Foram)
row.Foram<-row.names(Foram.sp)
clu.MRT.Foram.df<-data.frame(cluster=clu.MRT.Foram, row.names = row.Foram)



##### nMDS ORDINATION
install.packages("ggplot2")
install.packages("ggrepel")
install.packages("vegan")
install.packages("viridis")
library(ggplot2)
library(ggrepel)
library(vegan)
library(viridis)

#Function metaMDS performs Nonmetric Multidimensional Scaling (NMDS), and tries to find a stable solution using several random starts
nmds_Foram<-metaMDS(Foram.sp_rq, distance = "euclidean", k=2, autotransform = F)
# k = number of dimensions

Legend=rep(NA, 52)
ind=sample(1:21)
ind2=sample(22:38)
ind3=sample(39:52)
Legend[ind]="Area A"
Legend[ind2]="Area B"
Legend[ind3]="Area C"
Legend

data.scores=as.data.frame(scores(nmds_Foram))
#Function to access either species or site scores for specified axes in some ordination methods
data.scores$sites=rownames(data.scores)
species.scores=as.data.frame(scores(nmds_Foram,"species"))
species.scores$species=rownames(species.scores)
# Stress value to be plotted on the graph
nmds_Foram["stress"]

# Write .csv files of species and sites nMDS scores
write.csv2(species.scores,"species_score_nMDS.csv")
write.csv2(data.scores,"sites_score_nMDS.csv")

#Let's do the plot
x11(); # optional
  ggplot() + 
    geom_point(data=data.scores,aes(x=NMDS1,y=NMDS2,colour=Legend),shape=18,size=3) +
    geom_point(data=species.scores,aes(x=NMDS1,y=NMDS2),shape=16,colour="grey40",size=2) + #plot species dots
    scale_colour_viridis_d() +
    coord_equal() +
    theme_classic() +
    theme (panel.border = element_rect(fill=NA, linetype="solid", colour="black")) +
    geom_text_repel(data=data.scores,aes(x=NMDS1,y=NMDS2,label=sites),alpha=0.75,size=3) +
    geom_text_repel(data=species.scores,aes(x=NMDS1,y=NMDS2,label=species),alpha=0.75,fontface="italic",size=3) +
    ggtitle("NMDS Hellinger (2k) >5%\nstress=0.14")

















